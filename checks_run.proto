syntax = "proto3";
import public "global_options.proto";

option go_package="./;proto";
option java_package = "org.liquibase.grpc.proto";
option java_multiple_files = true;
option java_outer_classname = "ChecksRunProto";

package liquibase.pro;

service ChecksRunService {
  rpc execute(Checks.RunRequest) returns (Response) {}
}

/* Check the changelog or database for issues */
message Checks {
  message RunRequest {
    optional string auto_update = 1; // Allows automatic backup and updating of liquibase.checks.conf file when new quality checks are available, or for file format changes. Options: [on|off]
    optional bool cache_changelog_file_contents = 2; // If true, sqlFile change type contents will be cached in memory to improve performance, at the cost of higher memory usage. To reduce memory usage, set this to false.
    optional string changelog_file = 3; // Relative or fully qualified path to a Liquibase changelog file.  One of --changelog-file or --url is required.
    optional string check_name = 4; // Comma-separated list of one or more enabled checks to run. Checks to exclude can be prefixed with the ! character. If no checks are specified, all enabled checks will run. Example: --check-name=shortname1,shortname2,!shortname3
    optional bool check_rollbacks = 5; // Allow changeset's rollback code to be analyzed for compliance with currently enabled quality checks.
    optional string checks_output = 6; // Specify which parts of the checks run output should be shown; options: all, issues, issues0, issues1, issues2, issues3, issues4, validated, checksrun, sqlparserfails, skippedchecks
    optional string checks_packages = 7; // If using a checks packages file, optionally specify which packages should be run from the file as a comma separated list.
    optional string checks_scope = 8; // The Liquibase component to run checks against, which can be a comma separated list of the following options: 'changelog', 'database'
    optional string checks_settings_file = 9; // Relative or fully qualified path to a configuration file for checks execution
    optional string context_filter = 10; // Changeset contexts to match
    optional string default_catalog_name = 11; // The default catalog name to use for the database connection
    optional string default_schema_name = 12; // The default schema name to use for the database connection
    optional string driver = 13; // The JDBC driver class
    optional string driver_properties_file = 14; // The JDBC driver properties file
    optional string format = 15; // [PRO] Option to create JSON output
    optional string label_filter = 16; // Changeset labels to match
    optional string password = 17; // Password to use to connect to the database
    optional string schemas = 18; // The schemas to check when checks-scope contains 'database'
    optional int32 sql_parser_fail_severity = 19; // The severity that a check which fails due to a SQL parse error will exit with. If not set, use the severity of the configured check. Available values are: 0, 1, 2, 3, 4
    optional string url = 20; // The JDBC database connection URL.  One of --changelog-file or --url is required.
    optional string username = 21; // Username to use to connect to the database
    optional bool verbose = 22; // Verbose flag with optional values of 'True' or 'False'. The default is 'False'.
    liquibase.GlobalOptions global_options = 23;
  }
}

message Response {
  string message = 1;
}
