#!/bin/bash
# Code generated by protoc-gen-liquibase. DO NOT EDIT.

# Command Arguments
AUTOENABLENEWCHECKS=${1}
AUTOUPDATE=${2}
CACHECHANGELOGFILECONTENTS=${3}
CHANGELOGFILE=${4}
CHANGESETFILTER=${5}
CHECKNAME=${6}
CHECKROLLBACKS=${7}
CHECKSOUTPUT=${8}
CHECKSPACKAGES=${9}
CHECKSSCOPE=${10}
CHECKSSCRIPTSENABLED=${11}
CHECKSSCRIPTSPATH=${12}
CHECKSSETTINGSFILE=${13}
CONTEXTFILTER=${14}
DEFAULTCATALOGNAME=${15}
DEFAULTSCHEMANAME=${16}
DRIVER=${17}
DRIVERPROPERTIESFILE=${18}
FORMAT=${19}
LABELFILTER=${20}
PASSWORD=${21}
PROPERTYSUBSTITUTIONENABLED=${22}
REPORTENABLED=${23}
REPORTNAME=${24}
REPORTPATH=${25}
SCHEMAS=${26}
SQLPARSERFAILSEVERITY=${27}
URL=${28}
USERNAME=${29}
VERBOSE=${30}
# Global Options
ADDEMPTYMDCVALUES=${31}
ALLOWDUPLICATEDCHANGESETIDENTIFIERS=${32}
ALWAYSDROPINSTEADOFREPLACE=${33}
ALWAYSOVERRIDESTOREDLOGICSCHEMA=${34}
AUTOREORG=${35}
CHANGELOGLOCKPOLLRATE=${36}
CHANGELOGLOCKWAITTIMEINMINUTES=${37}
CHANGELOGPARSEMODE=${38}
CLASSPATH=${39}
CONVERTDATATYPES=${40}
CUSTOMLOGDATAFILE=${41}
CUSTOMLOGDATAFREQUENCY=${42}
DATABASECHANGELOGLOCKTABLENAME=${43}
DATABASECHANGELOGTABLENAME=${44}
DATABASECLASS=${45}
DBCLHISTORYCAPTUREEXTENSIONS=${46}
DBCLHISTORYCAPTURESQL=${47}
DBCLHISTORYENABLED=${48}
DBCLHISTORYSEVERITY=${49}
DBCLHISTORYTABLENAME=${50}
DDLLOCKTIMEOUT=${51}
DEFAULTSFILE=${52}
DIFFCOLUMNORDER=${53}
DUPLICATEFILEMODE=${54}
ERRORONCIRCULARINCLUDEALL=${55}
FILEENCODING=${56}
FILTERLOGMESSAGES=${57}
FLOWVERBOSETOSTRING=${58}
GENERATECHANGESETCREATEDVALUES=${59}
GENERATEDCHANGESETIDSCONTAINSDESCRIPTION=${60}
HEADLESS=${61}
INCLUDECATALOGINSPECIFICATION=${62}
INCLUDEMATCHINGTAGINROLLBACKOLDEST=${63}
INCLUDERELATIONSFORCOMPUTEDCOLUMNS=${64}
INCLUDESYSTEMCLASSPATH=${65}
LICENSEKEY=${66}
LIQUIBASECATALOGNAME=${67}
LIQUIBASESCHEMANAME=${68}
LIQUIBASETABLESPACENAME=${69}
LOGCHANNELS=${70}
LOGFILE=${71}
LOGFORMAT=${72}
LOGLEVEL=${73}
MIRRORCONSOLEMESSAGESTOLOG=${74}
MIRROROUTPUTTOCONSOLE=${75}
MISSINGPROPERTYMODE=${76}
MONITORPERFORMANCE=${77}
NATIVEEXECUTOR=${78}
ONMISSINGINCLUDECHANGELOG=${79}
ONMISSINGSQLFILE=${80}
OUTPUTFILE=${81}
OUTPUTFILEENCODING=${82}
OUTPUTLINESEPARATOR=${83}
PRESERVESCHEMACASE=${84}
PROFORCEONPARTIALCHANGES=${85}
PROGLOBALENDDELIMITER=${86}
PROGLOBALENDDELIMITERPRIORITIZED=${87}
PROLICENSEKEY=${88}
PROMARKUNUSEDNOTDROP=${89}
PROSQLINLINE=${90}
PROSYNONYMSDROPPUBLIC=${91}
PROSTRICT=${92}
PROMPTFORNONLOCALDATABASE=${93}
PROPERTYPROVIDERCLASS=${94}
REPORTSENABLED=${95}
REPORTSFORMAT=${96}
REPORTSNAME=${97}
REPORTSOPEN=${98}
REPORTSPATH=${99}
REPORTSQUIET=${100}
SEARCHPATH=${101}
SECUREPARSING=${102}
SHOULDRUN=${103}
SHOULDSNAPSHOTDATA=${104}
SHOWBANNER=${105}
SHOWHIDDENARGS=${106}
SQLALWAYSSETFETCHSIZE=${107}
SQLLOGLEVEL=${108}
SQLSHOWSQLWARNINGS=${109}
STRICT=${110}
SUPPORTPROPERTYESCAPING=${111}
SUPPORTSMETHODVALIDATIONLEVEL=${112}
TRIMLOADDATAFILEHEADER=${113}
UISERVICE=${114}
USEPROCEDURESCHEMA=${115}
VALIDATEXMLCHANGELOGFILES=${116}
WORKAROUNDORACLECLOBCHARACTERLIMIT=${117}


PARAMS=()

if [[ -n "$AUTOENABLENEWCHECKS" ]]; then
	PARAMS+=("--auto-enable-new-checks=$AUTOENABLENEWCHECKS")
fi
if [[ -n "$AUTOUPDATE" ]]; then
	PARAMS+=("--auto-update=$AUTOUPDATE")
fi
if [[ -n "$CACHECHANGELOGFILECONTENTS" ]]; then
	PARAMS+=("--cache-changelog-file-contents=$CACHECHANGELOGFILECONTENTS")
fi
if [[ -n "$CHANGELOGFILE" ]]; then
	PARAMS+=("--changelog-file=$CHANGELOGFILE")
fi
if [[ -n "$CHANGESETFILTER" ]]; then
	PARAMS+=("--changeset-filter=$CHANGESETFILTER")
fi
if [[ -n "$CHECKNAME" ]]; then
	PARAMS+=("--check-name=$CHECKNAME")
fi
if [[ -n "$CHECKROLLBACKS" ]]; then
	PARAMS+=("--check-rollbacks=$CHECKROLLBACKS")
fi
if [[ -n "$CHECKSOUTPUT" ]]; then
	PARAMS+=("--checks-output=$CHECKSOUTPUT")
fi
if [[ -n "$CHECKSPACKAGES" ]]; then
	PARAMS+=("--checks-packages=$CHECKSPACKAGES")
fi
if [[ -n "$CHECKSSCOPE" ]]; then
	PARAMS+=("--checks-scope=$CHECKSSCOPE")
fi
if [[ -n "$CHECKSSCRIPTSENABLED" ]]; then
	PARAMS+=("--checks-scripts-enabled=$CHECKSSCRIPTSENABLED")
fi
if [[ -n "$CHECKSSCRIPTSPATH" ]]; then
	PARAMS+=("--checks-scripts-path=$CHECKSSCRIPTSPATH")
fi
if [[ -n "$CHECKSSETTINGSFILE" ]]; then
	PARAMS+=("--checks-settings-file=$CHECKSSETTINGSFILE")
fi
if [[ -n "$CONTEXTFILTER" ]]; then
	PARAMS+=("--context-filter=$CONTEXTFILTER")
fi
if [[ -n "$DEFAULTCATALOGNAME" ]]; then
	PARAMS+=("--default-catalog-name=$DEFAULTCATALOGNAME")
fi
if [[ -n "$DEFAULTSCHEMANAME" ]]; then
	PARAMS+=("--default-schema-name=$DEFAULTSCHEMANAME")
fi
if [[ -n "$DRIVER" ]]; then
	PARAMS+=("--driver=$DRIVER")
fi
if [[ -n "$DRIVERPROPERTIESFILE" ]]; then
	PARAMS+=("--driver-properties-file=$DRIVERPROPERTIESFILE")
fi
if [[ -n "$FORMAT" ]]; then
	PARAMS+=("--format=$FORMAT")
fi
if [[ -n "$LABELFILTER" ]]; then
	PARAMS+=("--label-filter=$LABELFILTER")
fi
if [[ -n "$PASSWORD" ]]; then
	PARAMS+=("--password=$PASSWORD")
fi
if [[ -n "$PROPERTYSUBSTITUTIONENABLED" ]]; then
	PARAMS+=("--property-substitution-enabled=$PROPERTYSUBSTITUTIONENABLED")
fi
if [[ -n "$REPORTENABLED" ]]; then
	PARAMS+=("--report-enabled=$REPORTENABLED")
fi
if [[ -n "$REPORTNAME" ]]; then
	PARAMS+=("--report-name=$REPORTNAME")
fi
if [[ -n "$REPORTPATH" ]]; then
	PARAMS+=("--report-path=$REPORTPATH")
fi
if [[ -n "$SCHEMAS" ]]; then
	PARAMS+=("--schemas=$SCHEMAS")
fi
if [[ -n "$SQLPARSERFAILSEVERITY" ]]; then
	PARAMS+=("--sql-parser-fail-severity=$SQLPARSERFAILSEVERITY")
fi
if [[ -n "$URL" ]]; then
	PARAMS+=("--url=$URL")
fi
if [[ -n "$USERNAME" ]]; then
	PARAMS+=("--username=$USERNAME")
fi
if [[ -n "$VERBOSE" ]]; then
	PARAMS+=("--verbose=$VERBOSE")
fi

GLOBALS=()

if [[ -n "$ADDEMPTYMDCVALUES" ]]; then
	GLOBALS+=("--add-empty-mdc-values=$ADDEMPTYMDCVALUES")
fi
if [[ -n "$ALLOWDUPLICATEDCHANGESETIDENTIFIERS" ]]; then
	GLOBALS+=("--allow-duplicated-changeset-identifiers=$ALLOWDUPLICATEDCHANGESETIDENTIFIERS")
fi
if [[ -n "$ALWAYSDROPINSTEADOFREPLACE" ]]; then
	GLOBALS+=("--always-drop-instead-of-replace=$ALWAYSDROPINSTEADOFREPLACE")
fi
if [[ -n "$ALWAYSOVERRIDESTOREDLOGICSCHEMA" ]]; then
	GLOBALS+=("--always-override-stored-logic-schema=$ALWAYSOVERRIDESTOREDLOGICSCHEMA")
fi
if [[ -n "$AUTOREORG" ]]; then
	GLOBALS+=("--auto-reorg=$AUTOREORG")
fi
if [[ -n "$CHANGELOGLOCKPOLLRATE" ]]; then
	GLOBALS+=("--changelog-lock-poll-rate=$CHANGELOGLOCKPOLLRATE")
fi
if [[ -n "$CHANGELOGLOCKWAITTIMEINMINUTES" ]]; then
	GLOBALS+=("--changelog-lock-wait-time-in-minutes=$CHANGELOGLOCKWAITTIMEINMINUTES")
fi
if [[ -n "$CHANGELOGPARSEMODE" ]]; then
	GLOBALS+=("--changelog-parse-mode=$CHANGELOGPARSEMODE")
fi
if [[ -n "$CLASSPATH" ]]; then
	GLOBALS+=("--classpath=$CLASSPATH")
fi
if [[ -n "$CONVERTDATATYPES" ]]; then
	GLOBALS+=("--convert-data-types=$CONVERTDATATYPES")
fi
if [[ -n "$CUSTOMLOGDATAFILE" ]]; then
	GLOBALS+=("--custom-log-data-file=$CUSTOMLOGDATAFILE")
fi
if [[ -n "$CUSTOMLOGDATAFREQUENCY" ]]; then
	GLOBALS+=("--custom-log-data-frequency=$CUSTOMLOGDATAFREQUENCY")
fi
if [[ -n "$DATABASECHANGELOGLOCKTABLENAME" ]]; then
	GLOBALS+=("--database-changelog-lock-table-name=$DATABASECHANGELOGLOCKTABLENAME")
fi
if [[ -n "$DATABASECHANGELOGTABLENAME" ]]; then
	GLOBALS+=("--database-changelog-table-name=$DATABASECHANGELOGTABLENAME")
fi
if [[ -n "$DATABASECLASS" ]]; then
	GLOBALS+=("--database-class=$DATABASECLASS")
fi
if [[ -n "$DBCLHISTORYCAPTUREEXTENSIONS" ]]; then
	GLOBALS+=("--dbclhistory-capture-extensions=$DBCLHISTORYCAPTUREEXTENSIONS")
fi
if [[ -n "$DBCLHISTORYCAPTURESQL" ]]; then
	GLOBALS+=("--dbclhistory-capture-sql=$DBCLHISTORYCAPTURESQL")
fi
if [[ -n "$DBCLHISTORYENABLED" ]]; then
	GLOBALS+=("--dbclhistory-enabled=$DBCLHISTORYENABLED")
fi
if [[ -n "$DBCLHISTORYSEVERITY" ]]; then
	GLOBALS+=("--dbclhistory-severity=$DBCLHISTORYSEVERITY")
fi
if [[ -n "$DBCLHISTORYTABLENAME" ]]; then
	GLOBALS+=("--dbclhistory-table-name=$DBCLHISTORYTABLENAME")
fi
if [[ -n "$DDLLOCKTIMEOUT" ]]; then
	GLOBALS+=("--ddl-lock-timeout=$DDLLOCKTIMEOUT")
fi
if [[ -n "$DEFAULTSFILE" ]]; then
	GLOBALS+=("--defaults-file=$DEFAULTSFILE")
fi
if [[ -n "$DIFFCOLUMNORDER" ]]; then
	GLOBALS+=("--diff-column-order=$DIFFCOLUMNORDER")
fi
if [[ -n "$DUPLICATEFILEMODE" ]]; then
	GLOBALS+=("--duplicate-file-mode=$DUPLICATEFILEMODE")
fi
if [[ -n "$ERRORONCIRCULARINCLUDEALL" ]]; then
	GLOBALS+=("--error-on-circular-include-all=$ERRORONCIRCULARINCLUDEALL")
fi
if [[ -n "$FILEENCODING" ]]; then
	GLOBALS+=("--file-encoding=$FILEENCODING")
fi
if [[ -n "$FILTERLOGMESSAGES" ]]; then
	GLOBALS+=("--filter-log-messages=$FILTERLOGMESSAGES")
fi
if [[ -n "$FLOWVERBOSETOSTRING" ]]; then
	GLOBALS+=("--flow-verbose-to-string=$FLOWVERBOSETOSTRING")
fi
if [[ -n "$GENERATECHANGESETCREATEDVALUES" ]]; then
	GLOBALS+=("--generate-changeset-created-values=$GENERATECHANGESETCREATEDVALUES")
fi
if [[ -n "$GENERATEDCHANGESETIDSCONTAINSDESCRIPTION" ]]; then
	GLOBALS+=("--generated-changeset-ids-contains-description=$GENERATEDCHANGESETIDSCONTAINSDESCRIPTION")
fi
if [[ -n "$HEADLESS" ]]; then
	GLOBALS+=("--headless=$HEADLESS")
fi
if [[ -n "$INCLUDECATALOGINSPECIFICATION" ]]; then
	GLOBALS+=("--include-catalog-in-specification=$INCLUDECATALOGINSPECIFICATION")
fi
if [[ -n "$INCLUDEMATCHINGTAGINROLLBACKOLDEST" ]]; then
	GLOBALS+=("--include-matching-tag-in-rollback-oldest=$INCLUDEMATCHINGTAGINROLLBACKOLDEST")
fi
if [[ -n "$INCLUDERELATIONSFORCOMPUTEDCOLUMNS" ]]; then
	GLOBALS+=("--include-relations-for-computed-columns=$INCLUDERELATIONSFORCOMPUTEDCOLUMNS")
fi
if [[ -n "$INCLUDESYSTEMCLASSPATH" ]]; then
	GLOBALS+=("--include-system-classpath=$INCLUDESYSTEMCLASSPATH")
fi
if [[ -n "$LICENSEKEY" ]]; then
	GLOBALS+=("--license-key=$LICENSEKEY")
fi
if [[ -n "$LIQUIBASECATALOGNAME" ]]; then
	GLOBALS+=("--liquibase-catalog-name=$LIQUIBASECATALOGNAME")
fi
if [[ -n "$LIQUIBASESCHEMANAME" ]]; then
	GLOBALS+=("--liquibase-schema-name=$LIQUIBASESCHEMANAME")
fi
if [[ -n "$LIQUIBASETABLESPACENAME" ]]; then
	GLOBALS+=("--liquibase-tablespace-name=$LIQUIBASETABLESPACENAME")
fi
if [[ -n "$LOGCHANNELS" ]]; then
	GLOBALS+=("--log-channels=$LOGCHANNELS")
fi
if [[ -n "$LOGFILE" ]]; then
	GLOBALS+=("--log-file=$LOGFILE")
fi
if [[ -n "$LOGFORMAT" ]]; then
	GLOBALS+=("--log-format=$LOGFORMAT")
fi
if [[ -n "$LOGLEVEL" ]]; then
	GLOBALS+=("--log-level=$LOGLEVEL")
fi
if [[ -n "$MIRRORCONSOLEMESSAGESTOLOG" ]]; then
	GLOBALS+=("--mirror-console-messages-to-log=$MIRRORCONSOLEMESSAGESTOLOG")
fi
if [[ -n "$MIRROROUTPUTTOCONSOLE" ]]; then
	GLOBALS+=("--mirror-output-to-console=$MIRROROUTPUTTOCONSOLE")
fi
if [[ -n "$MISSINGPROPERTYMODE" ]]; then
	GLOBALS+=("--missing-property-mode=$MISSINGPROPERTYMODE")
fi
if [[ -n "$MONITORPERFORMANCE" ]]; then
	GLOBALS+=("--monitor-performance=$MONITORPERFORMANCE")
fi
if [[ -n "$NATIVEEXECUTOR" ]]; then
	GLOBALS+=("--native-executor=$NATIVEEXECUTOR")
fi
if [[ -n "$ONMISSINGINCLUDECHANGELOG" ]]; then
	GLOBALS+=("--on-missing-include-changelog=$ONMISSINGINCLUDECHANGELOG")
fi
if [[ -n "$ONMISSINGSQLFILE" ]]; then
	GLOBALS+=("--on-missing-sql-file=$ONMISSINGSQLFILE")
fi
if [[ -n "$OUTPUTFILE" ]]; then
	GLOBALS+=("--output-file=$OUTPUTFILE")
fi
if [[ -n "$OUTPUTFILEENCODING" ]]; then
	GLOBALS+=("--output-file-encoding=$OUTPUTFILEENCODING")
fi
if [[ -n "$OUTPUTLINESEPARATOR" ]]; then
	GLOBALS+=("--output-line-separator=$OUTPUTLINESEPARATOR")
fi
if [[ -n "$PRESERVESCHEMACASE" ]]; then
	GLOBALS+=("--preserve-schema-case=$PRESERVESCHEMACASE")
fi
if [[ -n "$PROFORCEONPARTIALCHANGES" ]]; then
	GLOBALS+=("--pro-force-on-partial-changes=$PROFORCEONPARTIALCHANGES")
fi
if [[ -n "$PROGLOBALENDDELIMITER" ]]; then
	GLOBALS+=("--pro-global-end-delimiter=$PROGLOBALENDDELIMITER")
fi
if [[ -n "$PROGLOBALENDDELIMITERPRIORITIZED" ]]; then
	GLOBALS+=("--pro-global-end-delimiter-prioritized=$PROGLOBALENDDELIMITERPRIORITIZED")
fi
if [[ -n "$PROLICENSEKEY" ]]; then
	GLOBALS+=("--pro-license-key=$PROLICENSEKEY")
fi
if [[ -n "$PROMARKUNUSEDNOTDROP" ]]; then
	GLOBALS+=("--pro-mark-unused-not-drop=$PROMARKUNUSEDNOTDROP")
fi
if [[ -n "$PROSQLINLINE" ]]; then
	GLOBALS+=("--pro-sql-inline=$PROSQLINLINE")
fi
if [[ -n "$PROSYNONYMSDROPPUBLIC" ]]; then
	GLOBALS+=("--pro-synonyms-drop-public=$PROSYNONYMSDROPPUBLIC")
fi
if [[ -n "$PROSTRICT" ]]; then
	GLOBALS+=("--pro-strict=$PROSTRICT")
fi
if [[ -n "$PROMPTFORNONLOCALDATABASE" ]]; then
	GLOBALS+=("--prompt-for-non-local-database=$PROMPTFORNONLOCALDATABASE")
fi
if [[ -n "$PROPERTYPROVIDERCLASS" ]]; then
	GLOBALS+=("--property-provider-class=$PROPERTYPROVIDERCLASS")
fi
if [[ -n "$REPORTSENABLED" ]]; then
	GLOBALS+=("--reports-enabled=$REPORTSENABLED")
fi
if [[ -n "$REPORTSFORMAT" ]]; then
	GLOBALS+=("--reports-format=$REPORTSFORMAT")
fi
if [[ -n "$REPORTSNAME" ]]; then
	GLOBALS+=("--reports-name=$REPORTSNAME")
fi
if [[ -n "$REPORTSOPEN" ]]; then
	GLOBALS+=("--reports-open=$REPORTSOPEN")
fi
if [[ -n "$REPORTSPATH" ]]; then
	GLOBALS+=("--reports-path=$REPORTSPATH")
fi
if [[ -n "$REPORTSQUIET" ]]; then
	GLOBALS+=("--reports-quiet=$REPORTSQUIET")
fi
if [[ -n "$SEARCHPATH" ]]; then
	GLOBALS+=("--search-path=$SEARCHPATH")
fi
if [[ -n "$SECUREPARSING" ]]; then
	GLOBALS+=("--secure-parsing=$SECUREPARSING")
fi
if [[ -n "$SHOULDRUN" ]]; then
	GLOBALS+=("--should-run=$SHOULDRUN")
fi
if [[ -n "$SHOULDSNAPSHOTDATA" ]]; then
	GLOBALS+=("--should-snapshot-data=$SHOULDSNAPSHOTDATA")
fi
if [[ -n "$SHOWBANNER" ]]; then
	GLOBALS+=("--show-banner=$SHOWBANNER")
fi
if [[ -n "$SHOWHIDDENARGS" ]]; then
	GLOBALS+=("--show-hidden-args=$SHOWHIDDENARGS")
fi
if [[ -n "$SQLALWAYSSETFETCHSIZE" ]]; then
	GLOBALS+=("--sql-always-set-fetch-size=$SQLALWAYSSETFETCHSIZE")
fi
if [[ -n "$SQLLOGLEVEL" ]]; then
	GLOBALS+=("--sql-log-level=$SQLLOGLEVEL")
fi
if [[ -n "$SQLSHOWSQLWARNINGS" ]]; then
	GLOBALS+=("--sql-show-sql-warnings=$SQLSHOWSQLWARNINGS")
fi
if [[ -n "$STRICT" ]]; then
	GLOBALS+=("--strict=$STRICT")
fi
if [[ -n "$SUPPORTPROPERTYESCAPING" ]]; then
	GLOBALS+=("--support-property-escaping=$SUPPORTPROPERTYESCAPING")
fi
if [[ -n "$SUPPORTSMETHODVALIDATIONLEVEL" ]]; then
	GLOBALS+=("--supports-method-validation-level=$SUPPORTSMETHODVALIDATIONLEVEL")
fi
if [[ -n "$TRIMLOADDATAFILEHEADER" ]]; then
	GLOBALS+=("--trim-load-data-file-header=$TRIMLOADDATAFILEHEADER")
fi
if [[ -n "$UISERVICE" ]]; then
	GLOBALS+=("--ui-service=$UISERVICE")
fi
if [[ -n "$USEPROCEDURESCHEMA" ]]; then
	GLOBALS+=("--use-procedure-schema=$USEPROCEDURESCHEMA")
fi
if [[ -n "$VALIDATEXMLCHANGELOGFILES" ]]; then
	GLOBALS+=("--validate-xml-changelog-files=$VALIDATEXMLCHANGELOGFILES")
fi
if [[ -n "$WORKAROUNDORACLECLOBCHARACTERLIMIT" ]]; then
	GLOBALS+=("--workaround-oracle-clob-character-limit=$WORKAROUNDORACLECLOBCHARACTERLIMIT")
fi

docker-entrypoint.sh "${GLOBALS[@]}" checks run "${PARAMS[@]}"
